language: r
warnings_are_errors: false
cache: false
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libcurl4-openssl-dev
    - libxml2-dev
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
services:
- xvfb
r:
- release
env:
  global:
  - R_BUILD_ARGS="--no-manual"
  - R_CHECK_ARGS="--as-cran --install-args=--build"
  - RGL_USE_NULL=TRUE
  - WARNINGS_ARE_ERRORS=1
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
  - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true
  - _R_CHECK_FORCE_SUGGESTS_=false
  - secure: bEV95cPDvWIgC6S/XAmkPUtGAdF6a9pZguGyOewNlcZm4TeA55hqmeUg7CDWzjldXPDXI2uDMlpGxRgtyw0Gkjxlh+0aTCnZW8yjGq6tTdTJ3rk1syGRa4ZWKh02jWtEQ5A1czvwhjmLafOqiaiAVXazjEOB9s7v8ZG0aLY9PEPrMAvjIHap6hw7wHTauM4sYUGP2VtKbVP0CP7MpBSZFsilNibCk3gBjV/RwYGX7opYYD3O+humlqmiTOqAZHByBuE18Iilu4FkbrsH+i57hqIgHBn+vD6vh5bXNbGiDU9iju5qKBJk/5gchPOkePuhraURT8Q8eyQkuMIEnQCIC2/QT6ivqCxOOF0Yh3AWfW0ls+tLnfpUZoz5sigBpbj1NO7O016mT1Q/+Do6AXYBaVRWxsuF3gD9bBiZ0gFKFBNIdwHChAUmDonN3QZU4LTwPEp2Old/EwJ4aGlbySRR4LVrgNyBv1gnuDL8qGyV/2JZEEQxEBKXxtXgKCR+YCGAPy+xbBVf2SZzJZOx52xnOhocGgKMOXPnO/0lxTydcusYJpwyjAl/5hiY9PKsHlumJ9SjFVVu4g3N+ubhpXf4faxpn9HtQtriOA2vNK7JYFpPtYZGCrHKx1gPvHqav8stgbiJ9slOM8GoxjPBxoVYZBpiHFSNnySPzUsl+XYGOoo=
before_install:
- ulimit -n 2048
- export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
- export PROJ_DIR=`basename $PWD`
- echo "travis_wait*\.log$" >> .Rbuildignore
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- codename=`linux_codename`;
- if [ "${codename}" = "trusty" ]; then start_xvfb ; fi
- jags_install || true;
- v8_install || true;
- dcmtk_install || true;
- gsl_install 2.1 || true ;
- export rver=`r_version`; echo $rver ;
- export PACKAGE_NAME=`package_name`
- export RCHECK_DIR=${PACKAGE_NAME}.Rcheck
- remove_neuroc_packages
- export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
- x=`export_clang_cxx`; eval ${x}
- echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
- echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
- clang_cxx
- export cmake_version="3.11"
- cmake --version
- x=`cmake_setup`; echo "${x}"; eval ${x};
- cmake --version
- export ants_user=neuroconductor
- if [[ "${PACKAGE_NAME}" == "ITKR" || "${PACKAGE_NAME}" == "ANTsRCore" || "${PACKAGE_NAME}"
  == "ANTsR" ]]; then Rscript -e "install.packages(c('Rcpp', 'RcppEigen'), type =
  'source', repo = 'http://cran.rstudio.com')" ; fi
- if [[ "${PACKAGE_NAME}" == "ITKR" || "${PACKAGE_NAME}" == "ANTsRCore" ]]; then export
  R_BUILD_ARGS="${R_BUILD_ARGS} --no-build-vignettes " ; export R_CHECK_ARGS="--no-vignettes
  ${R_CHECK_ARGS}" ; fi
- if [[ "${PACKAGE_NAME}" != "ITKR" ]]; then echo "Installing Missing Deps ITKR" ;
  install_missing_remote_deps_all ${ants_user}/ITKR ; gh_binary_install ${ants_user}/ITKR
  ; fi
- if [[ "${PACKAGE_NAME}" != "ANTsRCore" && "${PACKAGE_NAME}" != "ITKR" ]]; then echo
  "Installing Missing Deps ANTsRCore" ; install_missing_remote_deps_all ${ants_user}/ANTsRCore;
  gh_binary_install_passive ${ants_user}/ANTsRCore ; fi
- if [[ "${PACKAGE_NAME}" != "ANTsRCore" && "${PACKAGE_NAME}" != "ITKR" && "${PACKAGE_NAME}"
  != "ANTsR" ]]; then echo "Installing Missing Deps ANTsR" ; install_missing_remote_deps_all
  ${ants_user}/ANTsR ; gh_binary_install_passive ${ants_user}/ANTsR ; fi
- if [[ "${PACKAGE_NAME}" == "ANTsR" ]]; then export _R_CHECK_FORCE_SUGGESTS_=false
  ; fi
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- echo $PATH ;
- install_deps_no_suggests
- install_python_requirements ;
- R CMD javareconf ;
- travis_run_cache
script:
- Rscript -e 'install.packages("remotes")'
- Rscript -e 'remotes::install_github("hadley/pkgdown")'
- travis_wait 100 Rscript -e 'pkgdown::build_site()'
after_failure: 
before_deploy: 
deploy:
  provider: pages
  skip-cleanup: true
  keep-history: true
  local-dir: docs
  on:
    branch: master
  github_token: "$GITHUB_TOKEN"
after_deploy: 
